name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  EC2_HOST: ${{ env.EC2_HOST }}
  EC2_APP_DIR: /home/ubuntu/app

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Deploy to EC2
        run: |
          # Install required packages
          ssh -i ~/.ssh/id_rsa ${{ env.EC2_HOST }} "sudo apt update && sudo apt install -y docker.io docker-compose"
          
          # Create app directory
          ssh -i ~/.ssh/id_rsa ${{ env.EC2_HOST }} "mkdir -p ${{ env.EC2_APP_DIR }}"
          
          # Create .env file
          ssh -i ~/.ssh/id_rsa ${{ env.EC2_HOST }} "echo 'DB_PASSWORD=${{ secrets.DB_PASSWORD }}' > ${{ env.EC2_APP_DIR }}/.env"
          
          # Copy files
          scp -i ~/.ssh/id_rsa docker-compose.yml ${{ env.EC2_HOST }}:${{ env.EC2_APP_DIR }}/
          scp -i ~/.ssh/id_rsa Dockerfile ${{ env.EC2_HOST }}:${{ env.EC2_APP_DIR }}/
          scp -i ~/.ssh/id_rsa pom.xml ${{ env.EC2_HOST }}:${{ env.EC2_APP_DIR }}/
          scp -i ~/.ssh/id_rsa target/patientlookup-0.0.1-SNAPSHOT.jar ${{ env.EC2_HOST }}:${{ env.EC2_APP_DIR }}/
          scp -i ~/.ssh/id_rsa src/main/resources/application-prod.properties ${{ env.EC2_HOST }}:${{ env.EC2_APP_DIR }}/
          
          # Create src directory and copy source files
          ssh -i ~/.ssh/id_rsa ${{ env.EC2_HOST }} "mkdir -p ${{ env.EC2_APP_DIR }}/src"
          scp -i ~/.ssh/id_rsa -r src/* ${{ env.EC2_HOST }}:${{ env.EC2_APP_DIR }}/src/
          
          # Start/restart containers
          ssh -i ~/.ssh/id_rsa ${{ env.EC2_HOST }} "cd ${{ env.EC2_APP_DIR }} && docker-compose down && docker-compose up -d" 